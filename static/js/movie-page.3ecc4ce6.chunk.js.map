{"version":3,"file":"static/js/movie-page.3ecc4ce6.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://react-homework-04/./src/pages/MoviePage/MoviePage.module.css?f915","pages/MoviePage/MoviePage.jsx"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"MoviePage_Container__IS5Xw\",\"TopInfo\":\"MoviePage_TopInfo__u6P7Q\",\"Poster\":\"MoviePage_Poster__ria8O\",\"Info\":\"MoviePage_Info__yzyeb\",\"Info_mainTitle\":\"MoviePage_Info_mainTitle__pEkos\",\"Info_title\":\"MoviePage_Info_title__MxkmQ\",\"Overview\":\"MoviePage_Overview__F7I5G\",\"TopText\":\"MoviePage_TopText__oQA2C\",\"Link\":\"MoviePage_Link__+mgrf\",\"Link_back\":\"MoviePage_Link_back__bYP6L\",\"Button\":\"MoviePage_Button__ILj7O\"};","import { useQuery } from 'react-query';\nimport { Link, Outlet, useNavigate, useParams } from 'react-router-dom';\n\nimport { searchById } from 'services/imdbAPI';\nimport { queryClient } from 'index';\nimport styles from './MoviePage.module.css';\n\nexport default function MoviePage({ prevLocation }) {\n  const { movieId } = useParams();\n  const cache = queryClient.getQueryData();\n  const navigate = useNavigate();\n  const allCacheResults = cache?.pages?.reduce(\n    (acc, page) => [...acc, ...page.results],\n    []\n  );\n\n  const { data } = useQuery(movieId, searchById, {\n    initialData: () => {\n      return allCacheResults?.find(d => d.id === Number(movieId));\n    },\n  });\n\n  const getDate = () => {\n    const dateObj = new Date(data.first_air_date ?? data.release_date);\n    return dateObj.toLocaleDateString();\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={() => {\n          navigate(-1);\n        }}\n        className={styles.Link_back}\n      >\n        Back\n      </button>\n\n      {data && (\n        <div className={styles.Container}>\n          <div className={styles.TopInfo}>\n            <img\n              className={styles.Poster}\n              src={`http://image.tmdb.org/t/p/w300/${data.poster_path}`}\n              alt={data.title || data.original_name}\n            />\n            <div className={styles.TopText}>\n              <h2 className={[styles.Info, styles.Info_mainTitle].join(' ')}>\n                {data.title || data.original_name}\n              </h2>\n              {data.genres && (\n                <p className={styles.Info}>\n                  <b className={styles.Info_title}>Genres: </b>\n                  {data.genres?.map(g => g.name).join(', ')}\n                </p>\n              )}\n              {(data.first_air_date ?? data.release_date) && (\n                <p className={styles.Info}>\n                  <b className={styles.Info_title}>Release: </b> {getDate()}\n                </p>\n              )}\n\n              {data.vote_count && (\n                <p className={styles.Info}>\n                  <b className={styles.Info_title}>Total votes: </b>\n                  {data.vote_count}\n                </p>\n              )}\n              {data.vote_average && (\n                <p className={styles.Info}>\n                  <b className={styles.Info_title}>Vote average: </b>\n                  {data.vote_average}\n                </p>\n              )}\n              {data.homepage && (\n                <p className={styles.Info}>\n                  <b className={styles.Info_title}>Official homepage: </b>\n                  <a className={styles.Link} href={data.homepage}>\n                    {data.homepage}\n                  </a>\n                </p>\n              )}\n            </div>\n          </div>\n          <p className={styles.Overview}>\n            <b className={styles.Info_title}>Overview: </b> {data.overview}\n          </p>\n          <Link\n            className={styles.Button}\n            to={`/movie/${movieId}/credits`}\n            replace\n          >\n            Show credits\n          </Link>\n          <Link\n            className={styles.Button}\n            to={`/movie/${movieId}/reviews`}\n            replace\n          >\n            Show reviews\n          </Link>\n          <Outlet />\n          <div>\n            <img\n              src={`http://image.tmdb.org/t/p/w780${data.backdrop_path}`}\n              alt=\"\"\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","MoviePage","prevLocation","movieId","useParams","cache","queryClient","navigate","useNavigate","allCacheResults","pages","reduce","acc","page","results","data","useQuery","searchById","initialData","find","d","id","Number","type","onClick","className","styles","src","poster_path","alt","title","original_name","join","genres","map","g","name","first_air_date","release_date","Date","toLocaleDateString","getDate","vote_count","vote_average","homepage","href","overview","to","replace","backdrop_path"],"sourceRoot":""}